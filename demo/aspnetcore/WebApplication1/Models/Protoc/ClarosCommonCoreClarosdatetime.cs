// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claros_common_core_clarosdatetime.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace claros.protoc.Common.Core {

  /// <summary>Holder for reflection information generated from claros_common_core_clarosdatetime.proto</summary>
  public static partial class ClarosCommonCoreClarosdatetimeReflection {

    #region Descriptor
    /// <summary>File descriptor for claros_common_core_clarosdatetime.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClarosCommonCoreClarosdatetimeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidjbGFyb3NfY29tbW9uX2NvcmVfY2xhcm9zZGF0ZXRpbWUucHJvdG8SEmNs",
            "YXJvcy5jb21tb24uY29yZRonY2xhcm9zX2NvbW1vbl9jb3JlX21vYmlsZWRh",
            "dGV0aW1lLnByb3RvIokBCg5DbGFyb3NEYXRlVGltZRI8Cg5tb2JpbGVEYXRl",
            "VGltZRgBIAEoCzIiLmNsYXJvcy5jb21tb24uY29yZS5Nb2JpbGVEYXRlVGlt",
            "ZUgAEhYKDGpzb25EYXRlVGltZRgCIAEoCUgAEg8KBXRpY2tzGAMgASgESABC",
            "EAoOY2xhcm9zRGF0ZVRpbWViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::claros.protoc.Common.Core.ClarosCommonCoreMobiledatetimeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::claros.protoc.Common.Core.ClarosDateTime), global::claros.protoc.Common.Core.ClarosDateTime.Parser, new[]{ "MobileDateTime", "JsonDateTime", "Ticks" }, new[]{ "ClarosDateTime" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClarosDateTime : pb::IMessage<ClarosDateTime> {
    private static readonly pb::MessageParser<ClarosDateTime> _parser = new pb::MessageParser<ClarosDateTime>(() => new ClarosDateTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClarosDateTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::claros.protoc.Common.Core.ClarosCommonCoreClarosdatetimeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClarosDateTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClarosDateTime(ClarosDateTime other) : this() {
      switch (other.ClarosDateTimeCase) {
        case ClarosDateTimeOneofCase.MobileDateTime:
          MobileDateTime = other.MobileDateTime.Clone();
          break;
        case ClarosDateTimeOneofCase.JsonDateTime:
          JsonDateTime = other.JsonDateTime;
          break;
        case ClarosDateTimeOneofCase.Ticks:
          Ticks = other.Ticks;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClarosDateTime Clone() {
      return new ClarosDateTime(this);
    }

    /// <summary>Field number for the "mobileDateTime" field.</summary>
    public const int MobileDateTimeFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Core.MobileDateTime MobileDateTime {
      get { return clarosDateTimeCase_ == ClarosDateTimeOneofCase.MobileDateTime ? (global::claros.protoc.Common.Core.MobileDateTime) clarosDateTime_ : null; }
      set {
        clarosDateTime_ = value;
        clarosDateTimeCase_ = value == null ? ClarosDateTimeOneofCase.None : ClarosDateTimeOneofCase.MobileDateTime;
      }
    }

    /// <summary>Field number for the "jsonDateTime" field.</summary>
    public const int JsonDateTimeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonDateTime {
      get { return clarosDateTimeCase_ == ClarosDateTimeOneofCase.JsonDateTime ? (string) clarosDateTime_ : ""; }
      set {
        clarosDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        clarosDateTimeCase_ = ClarosDateTimeOneofCase.JsonDateTime;
      }
    }

    /// <summary>Field number for the "ticks" field.</summary>
    public const int TicksFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Ticks {
      get { return clarosDateTimeCase_ == ClarosDateTimeOneofCase.Ticks ? (ulong) clarosDateTime_ : 0UL; }
      set {
        clarosDateTime_ = value;
        clarosDateTimeCase_ = ClarosDateTimeOneofCase.Ticks;
      }
    }

    private object clarosDateTime_;
    /// <summary>Enum of possible cases for the "clarosDateTime" oneof.</summary>
    public enum ClarosDateTimeOneofCase {
      None = 0,
      MobileDateTime = 1,
      JsonDateTime = 2,
      Ticks = 3,
    }
    private ClarosDateTimeOneofCase clarosDateTimeCase_ = ClarosDateTimeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClarosDateTimeOneofCase ClarosDateTimeCase {
      get { return clarosDateTimeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClarosDateTime() {
      clarosDateTimeCase_ = ClarosDateTimeOneofCase.None;
      clarosDateTime_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClarosDateTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClarosDateTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MobileDateTime, other.MobileDateTime)) return false;
      if (JsonDateTime != other.JsonDateTime) return false;
      if (Ticks != other.Ticks) return false;
      if (ClarosDateTimeCase != other.ClarosDateTimeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (clarosDateTimeCase_ == ClarosDateTimeOneofCase.MobileDateTime) hash ^= MobileDateTime.GetHashCode();
      if (clarosDateTimeCase_ == ClarosDateTimeOneofCase.JsonDateTime) hash ^= JsonDateTime.GetHashCode();
      if (clarosDateTimeCase_ == ClarosDateTimeOneofCase.Ticks) hash ^= Ticks.GetHashCode();
      hash ^= (int) clarosDateTimeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (clarosDateTimeCase_ == ClarosDateTimeOneofCase.MobileDateTime) {
        output.WriteRawTag(10);
        output.WriteMessage(MobileDateTime);
      }
      if (clarosDateTimeCase_ == ClarosDateTimeOneofCase.JsonDateTime) {
        output.WriteRawTag(18);
        output.WriteString(JsonDateTime);
      }
      if (clarosDateTimeCase_ == ClarosDateTimeOneofCase.Ticks) {
        output.WriteRawTag(24);
        output.WriteUInt64(Ticks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (clarosDateTimeCase_ == ClarosDateTimeOneofCase.MobileDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MobileDateTime);
      }
      if (clarosDateTimeCase_ == ClarosDateTimeOneofCase.JsonDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonDateTime);
      }
      if (clarosDateTimeCase_ == ClarosDateTimeOneofCase.Ticks) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Ticks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClarosDateTime other) {
      if (other == null) {
        return;
      }
      switch (other.ClarosDateTimeCase) {
        case ClarosDateTimeOneofCase.MobileDateTime:
          if (MobileDateTime == null) {
            MobileDateTime = new global::claros.protoc.Common.Core.MobileDateTime();
          }
          MobileDateTime.MergeFrom(other.MobileDateTime);
          break;
        case ClarosDateTimeOneofCase.JsonDateTime:
          JsonDateTime = other.JsonDateTime;
          break;
        case ClarosDateTimeOneofCase.Ticks:
          Ticks = other.Ticks;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::claros.protoc.Common.Core.MobileDateTime subBuilder = new global::claros.protoc.Common.Core.MobileDateTime();
            if (clarosDateTimeCase_ == ClarosDateTimeOneofCase.MobileDateTime) {
              subBuilder.MergeFrom(MobileDateTime);
            }
            input.ReadMessage(subBuilder);
            MobileDateTime = subBuilder;
            break;
          }
          case 18: {
            JsonDateTime = input.ReadString();
            break;
          }
          case 24: {
            Ticks = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
