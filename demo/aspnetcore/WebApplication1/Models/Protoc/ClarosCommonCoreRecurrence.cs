// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claros_common_core_recurrence.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace claros.protoc.Common.Core {

  /// <summary>Holder for reflection information generated from claros_common_core_recurrence.proto</summary>
  public static partial class ClarosCommonCoreRecurrenceReflection {

    #region Descriptor
    /// <summary>File descriptor for claros_common_core_recurrence.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClarosCommonCoreRecurrenceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNjbGFyb3NfY29tbW9uX2NvcmVfcmVjdXJyZW5jZS5wcm90bxISY2xhcm9z",
            "LmNvbW1vbi5jb3JlGihjbGFyb3NfY29tbW9uX2NvcmVfcmVjdXJyZW5jZV90",
            "eXBlLnByb3RvGidjbGFyb3NfY29tbW9uX2NvcmVfY2xhcm9zZGF0ZXRpbWUu",
            "cHJvdG8aImNsYXJvc19jb21tb25fY29yZV9kYXlvZndlZWsucHJvdG8i0AEK",
            "ClJlY3VycmVuY2USMAoEdHlwZRgBIAEoDjIiLmNsYXJvcy5jb21tb24uY29y",
            "ZS5SZWN1cnJlbmNlVHlwZRI1CglzdGFydERhdGUYAiABKAsyIi5jbGFyb3Mu",
            "Y29tbW9uLmNvcmUuQ2xhcm9zRGF0ZVRpbWUSFAoMbWludXRlT2Zmc2V0GAMg",
            "ASgNEjEKCmRheXNPZldlZWsYBCADKA4yHS5jbGFyb3MuY29tbW9uLmNvcmUu",
            "RGF5T2ZXZWVrEhAKCGR1cmF0aW9uGAUgASgNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::claros.protoc.Common.Core.ClarosCommonCoreRecurrenceTypeReflection.Descriptor, global::claros.protoc.Common.Core.ClarosCommonCoreClarosdatetimeReflection.Descriptor, global::claros.protoc.Common.Core.ClarosCommonCoreDayofweekReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::claros.protoc.Common.Core.Recurrence), global::claros.protoc.Common.Core.Recurrence.Parser, new[]{ "Type", "StartDate", "MinuteOffset", "DaysOfWeek", "Duration" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Recurrence : pb::IMessage<Recurrence> {
    private static readonly pb::MessageParser<Recurrence> _parser = new pb::MessageParser<Recurrence>(() => new Recurrence());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Recurrence> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::claros.protoc.Common.Core.ClarosCommonCoreRecurrenceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recurrence() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recurrence(Recurrence other) : this() {
      type_ = other.type_;
      startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
      minuteOffset_ = other.minuteOffset_;
      daysOfWeek_ = other.daysOfWeek_.Clone();
      duration_ = other.duration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recurrence Clone() {
      return new Recurrence(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::claros.protoc.Common.Core.RecurrenceType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Core.RecurrenceType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "startDate" field.</summary>
    public const int StartDateFieldNumber = 2;
    private global::claros.protoc.Common.Core.ClarosDateTime startDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Core.ClarosDateTime StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "minuteOffset" field.</summary>
    public const int MinuteOffsetFieldNumber = 3;
    private uint minuteOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MinuteOffset {
      get { return minuteOffset_; }
      set {
        minuteOffset_ = value;
      }
    }

    /// <summary>Field number for the "daysOfWeek" field.</summary>
    public const int DaysOfWeekFieldNumber = 4;
    private static readonly pb::FieldCodec<global::claros.protoc.Common.Core.DayOfWeek> _repeated_daysOfWeek_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::claros.protoc.Common.Core.DayOfWeek) x);
    private readonly pbc::RepeatedField<global::claros.protoc.Common.Core.DayOfWeek> daysOfWeek_ = new pbc::RepeatedField<global::claros.protoc.Common.Core.DayOfWeek>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::claros.protoc.Common.Core.DayOfWeek> DaysOfWeek {
      get { return daysOfWeek_; }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 5;
    private uint duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Recurrence);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Recurrence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (MinuteOffset != other.MinuteOffset) return false;
      if(!daysOfWeek_.Equals(other.daysOfWeek_)) return false;
      if (Duration != other.Duration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (MinuteOffset != 0) hash ^= MinuteOffset.GetHashCode();
      hash ^= daysOfWeek_.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (startDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartDate);
      }
      if (MinuteOffset != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MinuteOffset);
      }
      daysOfWeek_.WriteTo(output, _repeated_daysOfWeek_codec);
      if (Duration != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (MinuteOffset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinuteOffset);
      }
      size += daysOfWeek_.CalculateSize(_repeated_daysOfWeek_codec);
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Duration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Recurrence other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          StartDate = new global::claros.protoc.Common.Core.ClarosDateTime();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.MinuteOffset != 0) {
        MinuteOffset = other.MinuteOffset;
      }
      daysOfWeek_.Add(other.daysOfWeek_);
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::claros.protoc.Common.Core.RecurrenceType) input.ReadEnum();
            break;
          }
          case 18: {
            if (startDate_ == null) {
              StartDate = new global::claros.protoc.Common.Core.ClarosDateTime();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 24: {
            MinuteOffset = input.ReadUInt32();
            break;
          }
          case 34:
          case 32: {
            daysOfWeek_.AddEntriesFrom(input, _repeated_daysOfWeek_codec);
            break;
          }
          case 40: {
            Duration = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
