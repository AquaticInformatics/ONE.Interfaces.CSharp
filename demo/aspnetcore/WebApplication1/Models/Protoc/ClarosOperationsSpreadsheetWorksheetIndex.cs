// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claros_operations_spreadsheet_worksheet_index.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace claros.protoc.Common.Form {

  /// <summary>Holder for reflection information generated from claros_operations_spreadsheet_worksheet_index.proto</summary>
  public static partial class ClarosOperationsSpreadsheetWorksheetIndexReflection {

    #region Descriptor
    /// <summary>File descriptor for claros_operations_spreadsheet_worksheet_index.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClarosOperationsSpreadsheetWorksheetIndexReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNjbGFyb3Nfb3BlcmF0aW9uc19zcHJlYWRzaGVldF93b3Jrc2hlZXRfaW5k",
            "ZXgucHJvdG8SEmNsYXJvcy5jb21tb24uZm9ybRojY2xhcm9zX2NvbW1vbl9j",
            "b3JlX3RpbWV3aW5kb3cucHJvdG8itQEKDldvcmtzaGVldEluZGV4EgoKAmlk",
            "GAEgASgJEhgKEHdvcmtzaGVldFZlcnNpb24YAiABKA0SMgoKdGltZVdpbmRv",
            "dxgDIAEoCzIeLmNsYXJvcy5jb21tb24uY29yZS5UaW1lV2luZG93EjYKDnV0",
            "Y1RpbWVXaW5kb3dzGAQgASgLMh4uY2xhcm9zLmNvbW1vbi5jb3JlLlRpbWVX",
            "aW5kb3cSEQoJaXNJblNwZWVkGAUgASgIYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::claros.protoc.Common.Core.ClarosCommonCoreTimewindowReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::claros.protoc.Common.Form.WorksheetIndex), global::claros.protoc.Common.Form.WorksheetIndex.Parser, new[]{ "Id", "WorksheetVersion", "TimeWindow", "UtcTimeWindows", "IsInSpeed" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WorksheetIndex : pb::IMessage<WorksheetIndex> {
    private static readonly pb::MessageParser<WorksheetIndex> _parser = new pb::MessageParser<WorksheetIndex>(() => new WorksheetIndex());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorksheetIndex> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::claros.protoc.Common.Form.ClarosOperationsSpreadsheetWorksheetIndexReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorksheetIndex() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorksheetIndex(WorksheetIndex other) : this() {
      id_ = other.id_;
      worksheetVersion_ = other.worksheetVersion_;
      timeWindow_ = other.timeWindow_ != null ? other.timeWindow_.Clone() : null;
      utcTimeWindows_ = other.utcTimeWindows_ != null ? other.utcTimeWindows_.Clone() : null;
      isInSpeed_ = other.isInSpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorksheetIndex Clone() {
      return new WorksheetIndex(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "worksheetVersion" field.</summary>
    public const int WorksheetVersionFieldNumber = 2;
    private uint worksheetVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WorksheetVersion {
      get { return worksheetVersion_; }
      set {
        worksheetVersion_ = value;
      }
    }

    /// <summary>Field number for the "timeWindow" field.</summary>
    public const int TimeWindowFieldNumber = 3;
    private global::claros.protoc.Common.Core.TimeWindow timeWindow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Core.TimeWindow TimeWindow {
      get { return timeWindow_; }
      set {
        timeWindow_ = value;
      }
    }

    /// <summary>Field number for the "utcTimeWindows" field.</summary>
    public const int UtcTimeWindowsFieldNumber = 4;
    private global::claros.protoc.Common.Core.TimeWindow utcTimeWindows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Core.TimeWindow UtcTimeWindows {
      get { return utcTimeWindows_; }
      set {
        utcTimeWindows_ = value;
      }
    }

    /// <summary>Field number for the "isInSpeed" field.</summary>
    public const int IsInSpeedFieldNumber = 5;
    private bool isInSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInSpeed {
      get { return isInSpeed_; }
      set {
        isInSpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorksheetIndex);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorksheetIndex other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (WorksheetVersion != other.WorksheetVersion) return false;
      if (!object.Equals(TimeWindow, other.TimeWindow)) return false;
      if (!object.Equals(UtcTimeWindows, other.UtcTimeWindows)) return false;
      if (IsInSpeed != other.IsInSpeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (WorksheetVersion != 0) hash ^= WorksheetVersion.GetHashCode();
      if (timeWindow_ != null) hash ^= TimeWindow.GetHashCode();
      if (utcTimeWindows_ != null) hash ^= UtcTimeWindows.GetHashCode();
      if (IsInSpeed != false) hash ^= IsInSpeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (WorksheetVersion != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(WorksheetVersion);
      }
      if (timeWindow_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TimeWindow);
      }
      if (utcTimeWindows_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UtcTimeWindows);
      }
      if (IsInSpeed != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsInSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (WorksheetVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WorksheetVersion);
      }
      if (timeWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeWindow);
      }
      if (utcTimeWindows_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UtcTimeWindows);
      }
      if (IsInSpeed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorksheetIndex other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.WorksheetVersion != 0) {
        WorksheetVersion = other.WorksheetVersion;
      }
      if (other.timeWindow_ != null) {
        if (timeWindow_ == null) {
          TimeWindow = new global::claros.protoc.Common.Core.TimeWindow();
        }
        TimeWindow.MergeFrom(other.TimeWindow);
      }
      if (other.utcTimeWindows_ != null) {
        if (utcTimeWindows_ == null) {
          UtcTimeWindows = new global::claros.protoc.Common.Core.TimeWindow();
        }
        UtcTimeWindows.MergeFrom(other.UtcTimeWindows);
      }
      if (other.IsInSpeed != false) {
        IsInSpeed = other.IsInSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            WorksheetVersion = input.ReadUInt32();
            break;
          }
          case 26: {
            if (timeWindow_ == null) {
              TimeWindow = new global::claros.protoc.Common.Core.TimeWindow();
            }
            input.ReadMessage(TimeWindow);
            break;
          }
          case 34: {
            if (utcTimeWindows_ == null) {
              UtcTimeWindows = new global::claros.protoc.Common.Core.TimeWindow();
            }
            input.ReadMessage(UtcTimeWindows);
            break;
          }
          case 40: {
            IsInSpeed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
