// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claros_operations_spreadsheet_worksheet_celldata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace claros.protoc.Operations.Spreadsheet {

  /// <summary>Holder for reflection information generated from claros_operations_spreadsheet_worksheet_celldata.proto</summary>
  public static partial class ClarosOperationsSpreadsheetWorksheetCelldataReflection {

    #region Descriptor
    /// <summary>File descriptor for claros_operations_spreadsheet_worksheet_celldata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClarosOperationsSpreadsheetWorksheetCelldataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZjbGFyb3Nfb3BlcmF0aW9uc19zcHJlYWRzaGVldF93b3Jrc2hlZXRfY2Vs",
            "bGRhdGEucHJvdG8SHWNsYXJvcy5vcGVyYXRpb25zLnNwcmVhZHNoZWV0Gixj",
            "bGFyb3NfY29tbW9uX2NvcmVfcmVwb3J0YWJsZXF1YWxpZmllci5wcm90bxo+",
            "Y2xhcm9zX29wZXJhdGlvbnNfc3ByZWFkc2hlZXRfd29ya3NoZWV0X2NlbGxk",
            "YXRhX2JpbmRpbmcucHJvdG8aI2NsYXJvc19jb21tb25fY29yZV9hdWRpdGV2",
            "ZW50LnByb3RvIqsCCghDZWxsRGF0YRINCgV2YWx1ZRgBIAEoARITCgtzdHJp",
            "bmdWYWx1ZRgCIAEoCRIQCghpc0xvY2tlZBgDIAEoCBIOCgZ1bml0SWQYBCAB",
            "KA0SFQoNanVzdGlmaWNhdGlvbhgFIAEoCRJEChNyZXBvcnRhYmxlUXVhbGlm",
            "aWVyGAYgASgLMicuY2xhcm9zLmNvbW1vbi5jb3JlLlJlcG9ydGFibGVRdWFs",
            "aWZpZXISSAoQY2VsbERhdGFCaW5kaW5ncxgHIAMoCzIuLmNsYXJvcy5vcGVy",
            "YXRpb25zLnNwcmVhZHNoZWV0LkNlbGxEYXRhQmluZGluZxIyCgphdWRpdEV2",
            "ZW50GGMgASgLMh4uY2xhcm9zLmNvbW1vbi5jb3JlLkF1ZGl0RXZlbnRiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::claros.protoc.Common.Core.ClarosCommonCoreReportablequalifierReflection.Descriptor, global::claros.protoc.Operations.Spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldataBindingReflection.Descriptor, global::claros.protoc.Common.Core.ClarosCommonCoreAuditeventReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::claros.protoc.Operations.Spreadsheet.CellData), global::claros.protoc.Operations.Spreadsheet.CellData.Parser, new[]{ "Value", "StringValue", "IsLocked", "UnitId", "Justification", "ReportableQualifier", "CellDataBindings", "AuditEvent" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CellData : pb::IMessage<CellData> {
    private static readonly pb::MessageParser<CellData> _parser = new pb::MessageParser<CellData>(() => new CellData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CellData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::claros.protoc.Operations.Spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CellData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CellData(CellData other) : this() {
      value_ = other.value_;
      stringValue_ = other.stringValue_;
      isLocked_ = other.isLocked_;
      unitId_ = other.unitId_;
      justification_ = other.justification_;
      reportableQualifier_ = other.reportableQualifier_ != null ? other.reportableQualifier_.Clone() : null;
      cellDataBindings_ = other.cellDataBindings_.Clone();
      auditEvent_ = other.auditEvent_ != null ? other.auditEvent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CellData Clone() {
      return new CellData(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "stringValue" field.</summary>
    public const int StringValueFieldNumber = 2;
    private string stringValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return stringValue_; }
      set {
        stringValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isLocked" field.</summary>
    public const int IsLockedFieldNumber = 3;
    private bool isLocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLocked {
      get { return isLocked_; }
      set {
        isLocked_ = value;
      }
    }

    /// <summary>Field number for the "unitId" field.</summary>
    public const int UnitIdFieldNumber = 4;
    private uint unitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnitId {
      get { return unitId_; }
      set {
        unitId_ = value;
      }
    }

    /// <summary>Field number for the "justification" field.</summary>
    public const int JustificationFieldNumber = 5;
    private string justification_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Justification {
      get { return justification_; }
      set {
        justification_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reportableQualifier" field.</summary>
    public const int ReportableQualifierFieldNumber = 6;
    private global::claros.protoc.Common.Core.ReportableQualifier reportableQualifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Core.ReportableQualifier ReportableQualifier {
      get { return reportableQualifier_; }
      set {
        reportableQualifier_ = value;
      }
    }

    /// <summary>Field number for the "cellDataBindings" field.</summary>
    public const int CellDataBindingsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::claros.protoc.Operations.Spreadsheet.CellDataBinding> _repeated_cellDataBindings_codec
        = pb::FieldCodec.ForMessage(58, global::claros.protoc.Operations.Spreadsheet.CellDataBinding.Parser);
    private readonly pbc::RepeatedField<global::claros.protoc.Operations.Spreadsheet.CellDataBinding> cellDataBindings_ = new pbc::RepeatedField<global::claros.protoc.Operations.Spreadsheet.CellDataBinding>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::claros.protoc.Operations.Spreadsheet.CellDataBinding> CellDataBindings {
      get { return cellDataBindings_; }
    }

    /// <summary>Field number for the "auditEvent" field.</summary>
    public const int AuditEventFieldNumber = 99;
    private global::claros.protoc.Common.Core.AuditEvent auditEvent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Core.AuditEvent AuditEvent {
      get { return auditEvent_; }
      set {
        auditEvent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CellData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CellData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      if (StringValue != other.StringValue) return false;
      if (IsLocked != other.IsLocked) return false;
      if (UnitId != other.UnitId) return false;
      if (Justification != other.Justification) return false;
      if (!object.Equals(ReportableQualifier, other.ReportableQualifier)) return false;
      if(!cellDataBindings_.Equals(other.cellDataBindings_)) return false;
      if (!object.Equals(AuditEvent, other.AuditEvent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (StringValue.Length != 0) hash ^= StringValue.GetHashCode();
      if (IsLocked != false) hash ^= IsLocked.GetHashCode();
      if (UnitId != 0) hash ^= UnitId.GetHashCode();
      if (Justification.Length != 0) hash ^= Justification.GetHashCode();
      if (reportableQualifier_ != null) hash ^= ReportableQualifier.GetHashCode();
      hash ^= cellDataBindings_.GetHashCode();
      if (auditEvent_ != null) hash ^= AuditEvent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (StringValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StringValue);
      }
      if (IsLocked != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsLocked);
      }
      if (UnitId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnitId);
      }
      if (Justification.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Justification);
      }
      if (reportableQualifier_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ReportableQualifier);
      }
      cellDataBindings_.WriteTo(output, _repeated_cellDataBindings_codec);
      if (auditEvent_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(AuditEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (StringValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (IsLocked != false) {
        size += 1 + 1;
      }
      if (UnitId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnitId);
      }
      if (Justification.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Justification);
      }
      if (reportableQualifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportableQualifier);
      }
      size += cellDataBindings_.CalculateSize(_repeated_cellDataBindings_codec);
      if (auditEvent_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AuditEvent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CellData other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      if (other.StringValue.Length != 0) {
        StringValue = other.StringValue;
      }
      if (other.IsLocked != false) {
        IsLocked = other.IsLocked;
      }
      if (other.UnitId != 0) {
        UnitId = other.UnitId;
      }
      if (other.Justification.Length != 0) {
        Justification = other.Justification;
      }
      if (other.reportableQualifier_ != null) {
        if (reportableQualifier_ == null) {
          ReportableQualifier = new global::claros.protoc.Common.Core.ReportableQualifier();
        }
        ReportableQualifier.MergeFrom(other.ReportableQualifier);
      }
      cellDataBindings_.Add(other.cellDataBindings_);
      if (other.auditEvent_ != null) {
        if (auditEvent_ == null) {
          AuditEvent = new global::claros.protoc.Common.Core.AuditEvent();
        }
        AuditEvent.MergeFrom(other.AuditEvent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
          case 18: {
            StringValue = input.ReadString();
            break;
          }
          case 24: {
            IsLocked = input.ReadBool();
            break;
          }
          case 32: {
            UnitId = input.ReadUInt32();
            break;
          }
          case 42: {
            Justification = input.ReadString();
            break;
          }
          case 50: {
            if (reportableQualifier_ == null) {
              ReportableQualifier = new global::claros.protoc.Common.Core.ReportableQualifier();
            }
            input.ReadMessage(ReportableQualifier);
            break;
          }
          case 58: {
            cellDataBindings_.AddEntriesFrom(input, _repeated_cellDataBindings_codec);
            break;
          }
          case 794: {
            if (auditEvent_ == null) {
              AuditEvent = new global::claros.protoc.Common.Core.AuditEvent();
            }
            input.ReadMessage(AuditEvent);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
