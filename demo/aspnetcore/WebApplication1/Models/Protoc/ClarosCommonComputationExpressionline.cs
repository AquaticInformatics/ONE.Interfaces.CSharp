// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claros_common_computation_expressionline.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace claros.protoc.Common.Computation {

  /// <summary>Holder for reflection information generated from claros_common_computation_expressionline.proto</summary>
  public static partial class ClarosCommonComputationExpressionlineReflection {

    #region Descriptor
    /// <summary>File descriptor for claros_common_computation_expressionline.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClarosCommonComputationExpressionlineReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5jbGFyb3NfY29tbW9uX2NvbXB1dGF0aW9uX2V4cHJlc3Npb25saW5lLnBy",
            "b3RvEhljbGFyb3MuY29tbW9uLmNvbXB1dGF0aW9uIlgKDkV4cHJlc3Npb25M",
            "aW5lEg8KB2kxOG5LZXkYASABKAkSDAoEbmFtZRgCIAEoCRISCgpleHByZXNz",
            "aW9uGAMgASgJEhMKC2Rlc2NyaXB0aW9uGAQgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::claros.protoc.Common.Computation.ExpressionLine), global::claros.protoc.Common.Computation.ExpressionLine.Parser, new[]{ "I18NKey", "Name", "Expression", "Description" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ExpressionLine : pb::IMessage<ExpressionLine> {
    private static readonly pb::MessageParser<ExpressionLine> _parser = new pb::MessageParser<ExpressionLine>(() => new ExpressionLine());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpressionLine> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::claros.protoc.Common.Computation.ClarosCommonComputationExpressionlineReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpressionLine() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpressionLine(ExpressionLine other) : this() {
      i18NKey_ = other.i18NKey_;
      name_ = other.name_;
      expression_ = other.expression_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpressionLine Clone() {
      return new ExpressionLine(this);
    }

    /// <summary>Field number for the "i18nKey" field.</summary>
    public const int I18NKeyFieldNumber = 1;
    private string i18NKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string I18NKey {
      get { return i18NKey_; }
      set {
        i18NKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 3;
    private string expression_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpressionLine);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpressionLine other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (I18NKey != other.I18NKey) return false;
      if (Name != other.Name) return false;
      if (Expression != other.Expression) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (I18NKey.Length != 0) hash ^= I18NKey.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (I18NKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(I18NKey);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Expression);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (I18NKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(I18NKey);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpressionLine other) {
      if (other == null) {
        return;
      }
      if (other.I18NKey.Length != 0) {
        I18NKey = other.I18NKey;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            I18NKey = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Expression = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
