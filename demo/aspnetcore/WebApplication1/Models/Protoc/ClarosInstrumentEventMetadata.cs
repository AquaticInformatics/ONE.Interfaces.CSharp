// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claros_instrument_event_metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace claros.protoc.Instrument {

  /// <summary>Holder for reflection information generated from claros_instrument_event_metadata.proto</summary>
  public static partial class ClarosInstrumentEventMetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for claros_instrument_event_metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClarosInstrumentEventMetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZjbGFyb3NfaW5zdHJ1bWVudF9ldmVudF9tZXRhZGF0YS5wcm90bxIRY2xh",
            "cm9zLmluc3RydW1lbnQiZAoNRXZlbnRNZXRhRGF0YRIYChBpMThuRGF0YWJh",
            "c2VOYW1lGAEgASgJEhgKEHRyYW5zbGF0aW9uSW5kZXgYAiABKAUSDwoHaTE4",
            "bktleRgDIAEoCRIOCgZzdGF0dXMYBCABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::claros.protoc.Instrument.EventMetaData), global::claros.protoc.Instrument.EventMetaData.Parser, new[]{ "I18NDatabaseName", "TranslationIndex", "I18NKey", "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EventMetaData : pb::IMessage<EventMetaData> {
    private static readonly pb::MessageParser<EventMetaData> _parser = new pb::MessageParser<EventMetaData>(() => new EventMetaData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMetaData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::claros.protoc.Instrument.ClarosInstrumentEventMetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMetaData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMetaData(EventMetaData other) : this() {
      i18NDatabaseName_ = other.i18NDatabaseName_;
      translationIndex_ = other.translationIndex_;
      i18NKey_ = other.i18NKey_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMetaData Clone() {
      return new EventMetaData(this);
    }

    /// <summary>Field number for the "i18nDatabaseName" field.</summary>
    public const int I18NDatabaseNameFieldNumber = 1;
    private string i18NDatabaseName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string I18NDatabaseName {
      get { return i18NDatabaseName_; }
      set {
        i18NDatabaseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "translationIndex" field.</summary>
    public const int TranslationIndexFieldNumber = 2;
    private int translationIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TranslationIndex {
      get { return translationIndex_; }
      set {
        translationIndex_ = value;
      }
    }

    /// <summary>Field number for the "i18nKey" field.</summary>
    public const int I18NKeyFieldNumber = 3;
    private string i18NKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string I18NKey {
      get { return i18NKey_; }
      set {
        i18NKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMetaData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMetaData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (I18NDatabaseName != other.I18NDatabaseName) return false;
      if (TranslationIndex != other.TranslationIndex) return false;
      if (I18NKey != other.I18NKey) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (I18NDatabaseName.Length != 0) hash ^= I18NDatabaseName.GetHashCode();
      if (TranslationIndex != 0) hash ^= TranslationIndex.GetHashCode();
      if (I18NKey.Length != 0) hash ^= I18NKey.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (I18NDatabaseName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(I18NDatabaseName);
      }
      if (TranslationIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TranslationIndex);
      }
      if (I18NKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(I18NKey);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (I18NDatabaseName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(I18NDatabaseName);
      }
      if (TranslationIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TranslationIndex);
      }
      if (I18NKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(I18NKey);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMetaData other) {
      if (other == null) {
        return;
      }
      if (other.I18NDatabaseName.Length != 0) {
        I18NDatabaseName = other.I18NDatabaseName;
      }
      if (other.TranslationIndex != 0) {
        TranslationIndex = other.TranslationIndex;
      }
      if (other.I18NKey.Length != 0) {
        I18NKey = other.I18NKey;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            I18NDatabaseName = input.ReadString();
            break;
          }
          case 16: {
            TranslationIndex = input.ReadInt32();
            break;
          }
          case 26: {
            I18NKey = input.ReadString();
            break;
          }
          case 32: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
