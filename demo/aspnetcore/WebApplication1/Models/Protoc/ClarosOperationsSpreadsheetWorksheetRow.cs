// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claros_operations_spreadsheet_worksheet_row.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace claros.protoc.Operations.Spreadsheet {

  /// <summary>Holder for reflection information generated from claros_operations_spreadsheet_worksheet_row.proto</summary>
  public static partial class ClarosOperationsSpreadsheetWorksheetRowReflection {

    #region Descriptor
    /// <summary>File descriptor for claros_operations_spreadsheet_worksheet_row.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClarosOperationsSpreadsheetWorksheetRowReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFjbGFyb3Nfb3BlcmF0aW9uc19zcHJlYWRzaGVldF93b3Jrc2hlZXRfcm93",
            "LnByb3RvEh1jbGFyb3Mub3BlcmF0aW9ucy5zcHJlYWRzaGVldBojY2xhcm9z",
            "X2NvbW1vbl9jb3JlX3RpbWV3aW5kb3cucHJvdG8aMmNsYXJvc19vcGVyYXRp",
            "b25zX3NwcmVhZHNoZWV0X3dvcmtzaGVldF9jZWxsLnByb3RvIoMBCgNSb3cS",
            "EQoJcm93TnVtYmVyGAEgASgNEjUKDVVUQ1RpbWVXaW5kb3cYAiABKAsyHi5j",
            "bGFyb3MuY29tbW9uLmNvcmUuVGltZVdpbmRvdxIyCgVjZWxscxgDIAMoCzIj",
            "LmNsYXJvcy5vcGVyYXRpb25zLnNwcmVhZHNoZWV0LkNlbGxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::claros.protoc.Common.Core.ClarosCommonCoreTimewindowReflection.Descriptor, global::claros.protoc.Operations.Spreadsheet.ClarosOperationsSpreadsheetWorksheetCellReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::claros.protoc.Operations.Spreadsheet.Row), global::claros.protoc.Operations.Spreadsheet.Row.Parser, new[]{ "RowNumber", "UTCTimeWindow", "Cells" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Row : pb::IMessage<Row> {
    private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Row> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::claros.protoc.Operations.Spreadsheet.ClarosOperationsSpreadsheetWorksheetRowReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row(Row other) : this() {
      rowNumber_ = other.rowNumber_;
      uTCTimeWindow_ = other.uTCTimeWindow_ != null ? other.uTCTimeWindow_.Clone() : null;
      cells_ = other.cells_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row Clone() {
      return new Row(this);
    }

    /// <summary>Field number for the "rowNumber" field.</summary>
    public const int RowNumberFieldNumber = 1;
    private uint rowNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RowNumber {
      get { return rowNumber_; }
      set {
        rowNumber_ = value;
      }
    }

    /// <summary>Field number for the "UTCTimeWindow" field.</summary>
    public const int UTCTimeWindowFieldNumber = 2;
    private global::claros.protoc.Common.Core.TimeWindow uTCTimeWindow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Core.TimeWindow UTCTimeWindow {
      get { return uTCTimeWindow_; }
      set {
        uTCTimeWindow_ = value;
      }
    }

    /// <summary>Field number for the "cells" field.</summary>
    public const int CellsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::claros.protoc.Operations.Spreadsheet.Cell> _repeated_cells_codec
        = pb::FieldCodec.ForMessage(26, global::claros.protoc.Operations.Spreadsheet.Cell.Parser);
    private readonly pbc::RepeatedField<global::claros.protoc.Operations.Spreadsheet.Cell> cells_ = new pbc::RepeatedField<global::claros.protoc.Operations.Spreadsheet.Cell>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::claros.protoc.Operations.Spreadsheet.Cell> Cells {
      get { return cells_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Row);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Row other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowNumber != other.RowNumber) return false;
      if (!object.Equals(UTCTimeWindow, other.UTCTimeWindow)) return false;
      if(!cells_.Equals(other.cells_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowNumber != 0) hash ^= RowNumber.GetHashCode();
      if (uTCTimeWindow_ != null) hash ^= UTCTimeWindow.GetHashCode();
      hash ^= cells_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RowNumber);
      }
      if (uTCTimeWindow_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UTCTimeWindow);
      }
      cells_.WriteTo(output, _repeated_cells_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RowNumber);
      }
      if (uTCTimeWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UTCTimeWindow);
      }
      size += cells_.CalculateSize(_repeated_cells_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Row other) {
      if (other == null) {
        return;
      }
      if (other.RowNumber != 0) {
        RowNumber = other.RowNumber;
      }
      if (other.uTCTimeWindow_ != null) {
        if (uTCTimeWindow_ == null) {
          UTCTimeWindow = new global::claros.protoc.Common.Core.TimeWindow();
        }
        UTCTimeWindow.MergeFrom(other.UTCTimeWindow);
      }
      cells_.Add(other.cells_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowNumber = input.ReadUInt32();
            break;
          }
          case 18: {
            if (uTCTimeWindow_ == null) {
              UTCTimeWindow = new global::claros.protoc.Common.Core.TimeWindow();
            }
            input.ReadMessage(UTCTimeWindow);
            break;
          }
          case 26: {
            cells_.AddEntriesFrom(input, _repeated_cells_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
