// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claros_common_form_field_worksheet_column_UTC.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace claros.protoc.Common.Form {

  /// <summary>Holder for reflection information generated from claros_common_form_field_worksheet_column_UTC.proto</summary>
  public static partial class ClarosCommonFormFieldWorksheetColumnUTCReflection {

    #region Descriptor
    /// <summary>File descriptor for claros_common_form_field_worksheet_column_UTC.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClarosCommonFormFieldWorksheetColumnUTCReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNjbGFyb3NfY29tbW9uX2Zvcm1fZmllbGRfd29ya3NoZWV0X2NvbHVtbl9V",
            "VEMucHJvdG8SEmNsYXJvcy5jb21tb24uZm9ybRo0Y2xhcm9zX29wZXJhdGlv",
            "bnNfc3ByZWFkc2hlZXRfd29ya3NoZWV0X2NvbHVtbi5wcm90bxoyY2xhcm9z",
            "X29wZXJhdGlvbnNfc3ByZWFkc2hlZXRfd29ya3NoZWV0X3R5cGUucHJvdG8i",
            "qgEKG0Zvcm1GaWVsZFdvcmtzaGVldENvbHVtblVUQxIPCgdwbGFudElkGAEg",
            "ASgJEkMKDXdvcmtzaGVldFR5cGUYAiABKA4yLC5jbGFyb3Mub3BlcmF0aW9u",
            "cy5zcHJlYWRzaGVldC5Xb3Jrc2hlZXRUeXBlEjUKBmNvbHVtbhgDIAEoCzIl",
            "LmNsYXJvcy5vcGVyYXRpb25zLnNwcmVhZHNoZWV0LkNvbHVtbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::claros.protoc.Operations.Spreadsheet.ClarosOperationsSpreadsheetWorksheetColumnReflection.Descriptor, global::claros.protoc.Operations.Spreadsheet.ClarosOperationsSpreadsheetWorksheetTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::claros.protoc.Common.Form.FormFieldWorksheetColumnUTC), global::claros.protoc.Common.Form.FormFieldWorksheetColumnUTC.Parser, new[]{ "PlantId", "WorksheetType", "Column" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FormFieldWorksheetColumnUTC : pb::IMessage<FormFieldWorksheetColumnUTC> {
    private static readonly pb::MessageParser<FormFieldWorksheetColumnUTC> _parser = new pb::MessageParser<FormFieldWorksheetColumnUTC>(() => new FormFieldWorksheetColumnUTC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FormFieldWorksheetColumnUTC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::claros.protoc.Common.Form.ClarosCommonFormFieldWorksheetColumnUTCReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormFieldWorksheetColumnUTC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormFieldWorksheetColumnUTC(FormFieldWorksheetColumnUTC other) : this() {
      plantId_ = other.plantId_;
      worksheetType_ = other.worksheetType_;
      column_ = other.column_ != null ? other.column_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormFieldWorksheetColumnUTC Clone() {
      return new FormFieldWorksheetColumnUTC(this);
    }

    /// <summary>Field number for the "plantId" field.</summary>
    public const int PlantIdFieldNumber = 1;
    private string plantId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlantId {
      get { return plantId_; }
      set {
        plantId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "worksheetType" field.</summary>
    public const int WorksheetTypeFieldNumber = 2;
    private global::claros.protoc.Operations.Spreadsheet.WorksheetType worksheetType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Operations.Spreadsheet.WorksheetType WorksheetType {
      get { return worksheetType_; }
      set {
        worksheetType_ = value;
      }
    }

    /// <summary>Field number for the "column" field.</summary>
    public const int ColumnFieldNumber = 3;
    private global::claros.protoc.Operations.Spreadsheet.Column column_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Operations.Spreadsheet.Column Column {
      get { return column_; }
      set {
        column_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FormFieldWorksheetColumnUTC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FormFieldWorksheetColumnUTC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlantId != other.PlantId) return false;
      if (WorksheetType != other.WorksheetType) return false;
      if (!object.Equals(Column, other.Column)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlantId.Length != 0) hash ^= PlantId.GetHashCode();
      if (WorksheetType != 0) hash ^= WorksheetType.GetHashCode();
      if (column_ != null) hash ^= Column.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlantId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlantId);
      }
      if (WorksheetType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) WorksheetType);
      }
      if (column_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Column);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlantId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlantId);
      }
      if (WorksheetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WorksheetType);
      }
      if (column_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Column);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FormFieldWorksheetColumnUTC other) {
      if (other == null) {
        return;
      }
      if (other.PlantId.Length != 0) {
        PlantId = other.PlantId;
      }
      if (other.WorksheetType != 0) {
        WorksheetType = other.WorksheetType;
      }
      if (other.column_ != null) {
        if (column_ == null) {
          Column = new global::claros.protoc.Operations.Spreadsheet.Column();
        }
        Column.MergeFrom(other.Column);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlantId = input.ReadString();
            break;
          }
          case 16: {
            WorksheetType = (global::claros.protoc.Operations.Spreadsheet.WorksheetType) input.ReadEnum();
            break;
          }
          case 26: {
            if (column_ == null) {
              Column = new global::claros.protoc.Operations.Spreadsheet.Column();
            }
            input.ReadMessage(Column);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
