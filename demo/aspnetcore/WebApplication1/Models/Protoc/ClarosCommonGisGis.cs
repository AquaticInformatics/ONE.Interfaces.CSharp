// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claros_common_gis_gis.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace claros.protoc.Common.Gis {

  /// <summary>Holder for reflection information generated from claros_common_gis_gis.proto</summary>
  public static partial class ClarosCommonGisGisReflection {

    #region Descriptor
    /// <summary>File descriptor for claros_common_gis_gis.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClarosCommonGisGisReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtjbGFyb3NfY29tbW9uX2dpc19naXMucHJvdG8SEWNsYXJvcy5jb21tb24u",
            "Z2lzGh9jbGFyb3NfY29tbW9uX2dpc19wb2ludDJkLnByb3RvGh9jbGFyb3Nf",
            "Y29tbW9uX2dpc19wb2ludDNkLnByb3RvGiVjbGFyb3NfY29tbW9uX2dpc19t",
            "dWx0aV9wb2ludDJkLnByb3RvGiVjbGFyb3NfY29tbW9uX2dpc19tdWx0aV9w",
            "b2ludDNkLnByb3RvIs8BCgNHSVMSKwoHcG9pbnQyZBgBIAEoCzIaLmNsYXJv",
            "cy5jb21tb24uZ2lzLlBvaW50MkQSKwoHcG9pbnQzZBgCIAEoCzIaLmNsYXJv",
            "cy5jb21tb24uZ2lzLlBvaW50M0QSNgoNbXVsdGlfcG9pbnQyZBgDIAEoCzIf",
            "LmNsYXJvcy5jb21tb24uZ2lzLk11bHRpUG9pbnQyRBI2Cg1tdWx0aV9wb2lu",
            "dDNkGAQgASgLMh8uY2xhcm9zLmNvbW1vbi5naXMuTXVsdGlQb2ludDNEYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::claros.protoc.Common.Gis.ClarosCommonGisPoint2DReflection.Descriptor, global::claros.protoc.Common.Gis.ClarosCommonGisPoint3DReflection.Descriptor, global::claros.protoc.Common.Gis.ClarosCommonGisMultiPoint2DReflection.Descriptor, global::claros.protoc.Common.Gis.ClarosCommonGisMultiPoint3DReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::claros.protoc.Common.Gis.GIS), global::claros.protoc.Common.Gis.GIS.Parser, new[]{ "Point2D", "Point3D", "MultiPoint2D", "MultiPoint3D" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GIS : pb::IMessage<GIS> {
    private static readonly pb::MessageParser<GIS> _parser = new pb::MessageParser<GIS>(() => new GIS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GIS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::claros.protoc.Common.Gis.ClarosCommonGisGisReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GIS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GIS(GIS other) : this() {
      point2D_ = other.point2D_ != null ? other.point2D_.Clone() : null;
      point3D_ = other.point3D_ != null ? other.point3D_.Clone() : null;
      multiPoint2D_ = other.multiPoint2D_ != null ? other.multiPoint2D_.Clone() : null;
      multiPoint3D_ = other.multiPoint3D_ != null ? other.multiPoint3D_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GIS Clone() {
      return new GIS(this);
    }

    /// <summary>Field number for the "point2d" field.</summary>
    public const int Point2DFieldNumber = 1;
    private global::claros.protoc.Common.Gis.Point2D point2D_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Gis.Point2D Point2D {
      get { return point2D_; }
      set {
        point2D_ = value;
      }
    }

    /// <summary>Field number for the "point3d" field.</summary>
    public const int Point3DFieldNumber = 2;
    private global::claros.protoc.Common.Gis.Point3D point3D_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Gis.Point3D Point3D {
      get { return point3D_; }
      set {
        point3D_ = value;
      }
    }

    /// <summary>Field number for the "multi_point2d" field.</summary>
    public const int MultiPoint2DFieldNumber = 3;
    private global::claros.protoc.Common.Gis.MultiPoint2D multiPoint2D_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Gis.MultiPoint2D MultiPoint2D {
      get { return multiPoint2D_; }
      set {
        multiPoint2D_ = value;
      }
    }

    /// <summary>Field number for the "multi_point3d" field.</summary>
    public const int MultiPoint3DFieldNumber = 4;
    private global::claros.protoc.Common.Gis.MultiPoint3D multiPoint3D_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::claros.protoc.Common.Gis.MultiPoint3D MultiPoint3D {
      get { return multiPoint3D_; }
      set {
        multiPoint3D_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GIS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GIS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Point2D, other.Point2D)) return false;
      if (!object.Equals(Point3D, other.Point3D)) return false;
      if (!object.Equals(MultiPoint2D, other.MultiPoint2D)) return false;
      if (!object.Equals(MultiPoint3D, other.MultiPoint3D)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (point2D_ != null) hash ^= Point2D.GetHashCode();
      if (point3D_ != null) hash ^= Point3D.GetHashCode();
      if (multiPoint2D_ != null) hash ^= MultiPoint2D.GetHashCode();
      if (multiPoint3D_ != null) hash ^= MultiPoint3D.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (point2D_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Point2D);
      }
      if (point3D_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Point3D);
      }
      if (multiPoint2D_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MultiPoint2D);
      }
      if (multiPoint3D_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MultiPoint3D);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (point2D_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Point2D);
      }
      if (point3D_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Point3D);
      }
      if (multiPoint2D_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultiPoint2D);
      }
      if (multiPoint3D_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultiPoint3D);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GIS other) {
      if (other == null) {
        return;
      }
      if (other.point2D_ != null) {
        if (point2D_ == null) {
          Point2D = new global::claros.protoc.Common.Gis.Point2D();
        }
        Point2D.MergeFrom(other.Point2D);
      }
      if (other.point3D_ != null) {
        if (point3D_ == null) {
          Point3D = new global::claros.protoc.Common.Gis.Point3D();
        }
        Point3D.MergeFrom(other.Point3D);
      }
      if (other.multiPoint2D_ != null) {
        if (multiPoint2D_ == null) {
          MultiPoint2D = new global::claros.protoc.Common.Gis.MultiPoint2D();
        }
        MultiPoint2D.MergeFrom(other.MultiPoint2D);
      }
      if (other.multiPoint3D_ != null) {
        if (multiPoint3D_ == null) {
          MultiPoint3D = new global::claros.protoc.Common.Gis.MultiPoint3D();
        }
        MultiPoint3D.MergeFrom(other.MultiPoint3D);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (point2D_ == null) {
              Point2D = new global::claros.protoc.Common.Gis.Point2D();
            }
            input.ReadMessage(Point2D);
            break;
          }
          case 18: {
            if (point3D_ == null) {
              Point3D = new global::claros.protoc.Common.Gis.Point3D();
            }
            input.ReadMessage(Point3D);
            break;
          }
          case 26: {
            if (multiPoint2D_ == null) {
              MultiPoint2D = new global::claros.protoc.Common.Gis.MultiPoint2D();
            }
            input.ReadMessage(MultiPoint2D);
            break;
          }
          case 34: {
            if (multiPoint3D_ == null) {
              MultiPoint3D = new global::claros.protoc.Common.Gis.MultiPoint3D();
            }
            input.ReadMessage(MultiPoint3D);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
