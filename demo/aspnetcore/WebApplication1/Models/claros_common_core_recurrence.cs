// This file was generated by a tool; you should avoid making direct changes.
// Consider using 'partial classes' to extend these types
// Input: claros_common_core_recurrence.proto

#pragma warning disable CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace claros.protogen.common.core
{

    [global::ProtoBuf.ProtoContract()]
    public partial class DayOfWeekInterval : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public OrdinalType ordinalType { get; set; }

        [global::ProtoBuf.ProtoMember(2)]
        public DayType dayType { get; set; }

        [global::ProtoBuf.ProtoMember(3)]
        public uint weekInterval { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class MonthOfYearInterval : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public OrdinalType ordinalType { get; set; }

        [global::ProtoBuf.ProtoMember(2)]
        public DayType dayType { get; set; }

        [global::ProtoBuf.ProtoMember(3)]
        public MonthType monthType { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class MonthDay : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public uint dayNumber { get; set; }

        [global::ProtoBuf.ProtoMember(2)]
        public uint monthInterval { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class YearMonth : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public MonthType monthType { get; set; }

        [global::ProtoBuf.ProtoMember(2)]
        public uint dayOfMonth { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class Daily : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"interval")]
        public uint Interval
        {
            get { return __pbn__dailyPattern.Is(1) ? __pbn__dailyPattern.UInt32 : default; }
            set { __pbn__dailyPattern = new global::ProtoBuf.DiscriminatedUnion32(1, value); }
        }
        public bool ShouldSerializeInterval() => __pbn__dailyPattern.Is(1);
        public void ResetInterval() => global::ProtoBuf.DiscriminatedUnion32.Reset(ref __pbn__dailyPattern, 1);

        private global::ProtoBuf.DiscriminatedUnion32 __pbn__dailyPattern;

        [global::ProtoBuf.ProtoMember(2)]
        public bool everyWeekday
        {
            get { return __pbn__dailyPattern.Is(2) ? __pbn__dailyPattern.Boolean : default; }
            set { __pbn__dailyPattern = new global::ProtoBuf.DiscriminatedUnion32(2, value); }
        }
        public bool ShouldSerializeeveryWeekday() => __pbn__dailyPattern.Is(2);
        public void ReseteveryWeekday() => global::ProtoBuf.DiscriminatedUnion32.Reset(ref __pbn__dailyPattern, 2);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class Weekly : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"interval")]
        public uint Interval { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"daysOfWeek", IsPacked = true)]
        public global::System.Collections.Generic.List<DayOfWeek> daysOfWeeks { get; } = new global::System.Collections.Generic.List<DayOfWeek>();

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class Monthly : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public MonthDay monthDay
        {
            get { return __pbn__monthlyPattern.Is(1) ? ((MonthDay)__pbn__monthlyPattern.Object) : default; }
            set { __pbn__monthlyPattern = new global::ProtoBuf.DiscriminatedUnionObject(1, value); }
        }
        public bool ShouldSerializemonthDay() => __pbn__monthlyPattern.Is(1);
        public void ResetmonthDay() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__monthlyPattern, 1);

        private global::ProtoBuf.DiscriminatedUnionObject __pbn__monthlyPattern;

        [global::ProtoBuf.ProtoMember(2)]
        public DayOfWeekInterval dayOfWeekInterval
        {
            get { return __pbn__monthlyPattern.Is(2) ? ((DayOfWeekInterval)__pbn__monthlyPattern.Object) : default; }
            set { __pbn__monthlyPattern = new global::ProtoBuf.DiscriminatedUnionObject(2, value); }
        }
        public bool ShouldSerializedayOfWeekInterval() => __pbn__monthlyPattern.Is(2);
        public void ResetdayOfWeekInterval() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__monthlyPattern, 2);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class Yearly : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"interval")]
        public uint Interval { get; set; }

        [global::ProtoBuf.ProtoMember(2)]
        public YearMonth yearMonth
        {
            get { return __pbn__yearlyPattern.Is(2) ? ((YearMonth)__pbn__yearlyPattern.Object) : default; }
            set { __pbn__yearlyPattern = new global::ProtoBuf.DiscriminatedUnionObject(2, value); }
        }
        public bool ShouldSerializeyearMonth() => __pbn__yearlyPattern.Is(2);
        public void ResetyearMonth() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__yearlyPattern, 2);

        private global::ProtoBuf.DiscriminatedUnionObject __pbn__yearlyPattern;

        [global::ProtoBuf.ProtoMember(3)]
        public MonthOfYearInterval monthOfYearInterval
        {
            get { return __pbn__yearlyPattern.Is(3) ? ((MonthOfYearInterval)__pbn__yearlyPattern.Object) : default; }
            set { __pbn__yearlyPattern = new global::ProtoBuf.DiscriminatedUnionObject(3, value); }
        }
        public bool ShouldSerializemonthOfYearInterval() => __pbn__yearlyPattern.Is(3);
        public void ResetmonthOfYearInterval() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__yearlyPattern, 3);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class RecurrencePattern : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"daily")]
        public Daily Daily
        {
            get { return __pbn__pattern.Is(1) ? ((Daily)__pbn__pattern.Object) : default; }
            set { __pbn__pattern = new global::ProtoBuf.DiscriminatedUnionObject(1, value); }
        }
        public bool ShouldSerializeDaily() => __pbn__pattern.Is(1);
        public void ResetDaily() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__pattern, 1);

        private global::ProtoBuf.DiscriminatedUnionObject __pbn__pattern;

        [global::ProtoBuf.ProtoMember(2, Name = @"weekly")]
        public Weekly Weekly
        {
            get { return __pbn__pattern.Is(2) ? ((Weekly)__pbn__pattern.Object) : default; }
            set { __pbn__pattern = new global::ProtoBuf.DiscriminatedUnionObject(2, value); }
        }
        public bool ShouldSerializeWeekly() => __pbn__pattern.Is(2);
        public void ResetWeekly() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__pattern, 2);

        [global::ProtoBuf.ProtoMember(3, Name = @"monthly")]
        public Monthly Monthly
        {
            get { return __pbn__pattern.Is(3) ? ((Monthly)__pbn__pattern.Object) : default; }
            set { __pbn__pattern = new global::ProtoBuf.DiscriminatedUnionObject(3, value); }
        }
        public bool ShouldSerializeMonthly() => __pbn__pattern.Is(3);
        public void ResetMonthly() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__pattern, 3);

        [global::ProtoBuf.ProtoMember(4, Name = @"yearly")]
        public Yearly Yearly
        {
            get { return __pbn__pattern.Is(4) ? ((Yearly)__pbn__pattern.Object) : default; }
            set { __pbn__pattern = new global::ProtoBuf.DiscriminatedUnionObject(4, value); }
        }
        public bool ShouldSerializeYearly() => __pbn__pattern.Is(4);
        public void ResetYearly() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__pattern, 4);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class RangeOfRecurrence : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public ClarosDateTime recurranceSartDate { get; set; }

        [global::ProtoBuf.ProtoMember(2)]
        public bool noEnd
        {
            get { return __pbn__recurranceEnd.Is(2) ? __pbn__recurranceEnd.Boolean : default; }
            set { __pbn__recurranceEnd = new global::ProtoBuf.DiscriminatedUnion32Object(2, value); }
        }
        public bool ShouldSerializenoEnd() => __pbn__recurranceEnd.Is(2);
        public void ResetnoEnd() => global::ProtoBuf.DiscriminatedUnion32Object.Reset(ref __pbn__recurranceEnd, 2);

        private global::ProtoBuf.DiscriminatedUnion32Object __pbn__recurranceEnd;

        [global::ProtoBuf.ProtoMember(3, Name = @"occurances")]
        public uint Occurances
        {
            get { return __pbn__recurranceEnd.Is(3) ? __pbn__recurranceEnd.UInt32 : default; }
            set { __pbn__recurranceEnd = new global::ProtoBuf.DiscriminatedUnion32Object(3, value); }
        }
        public bool ShouldSerializeOccurances() => __pbn__recurranceEnd.Is(3);
        public void ResetOccurances() => global::ProtoBuf.DiscriminatedUnion32Object.Reset(ref __pbn__recurranceEnd, 3);

        [global::ProtoBuf.ProtoMember(4)]
        public ClarosDateTime endDate
        {
            get { return __pbn__recurranceEnd.Is(4) ? ((ClarosDateTime)__pbn__recurranceEnd.Object) : default; }
            set { __pbn__recurranceEnd = new global::ProtoBuf.DiscriminatedUnion32Object(4, value); }
        }
        public bool ShouldSerializeendDate() => __pbn__recurranceEnd.Is(4);
        public void ResetendDate() => global::ProtoBuf.DiscriminatedUnion32Object.Reset(ref __pbn__recurranceEnd, 4);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class Recurrance : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public ClarosDateTime startDate { get; set; }

        [global::ProtoBuf.ProtoMember(2)]
        public ClarosDateTime endDate { get; set; }

        [global::ProtoBuf.ProtoMember(3)]
        public RecurrencePattern recurrencePattern { get; set; }

        [global::ProtoBuf.ProtoMember(4)]
        public RangeOfRecurrence rangeOfRecurrence { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public enum DayType
    {
        [global::ProtoBuf.ProtoEnum(Name = @"DAY_UNKNOWN")]
        DayUnknown = 0,
        [global::ProtoBuf.ProtoEnum(Name = @"DAY_SUNDAY")]
        DaySunday = 1,
        [global::ProtoBuf.ProtoEnum(Name = @"DAY_MONDAY")]
        DayMonday = 2,
        [global::ProtoBuf.ProtoEnum(Name = @"DAY_TUESDAY")]
        DayTuesday = 3,
        [global::ProtoBuf.ProtoEnum(Name = @"DAY_WEDNESDAY")]
        DayWednesday = 4,
        [global::ProtoBuf.ProtoEnum(Name = @"DAY_THURSDAY")]
        DayThursday = 5,
        [global::ProtoBuf.ProtoEnum(Name = @"DAY_FRIDAY")]
        DayFriday = 6,
        [global::ProtoBuf.ProtoEnum(Name = @"DAY_SATURDAY")]
        DaySaturday = 7,
    }

    [global::ProtoBuf.ProtoContract()]
    public enum MonthType
    {
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_UNKNOWN")]
        MonthUnknown = 0,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_JANUARY")]
        MonthJanuary = 1,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_FEBRUARY")]
        MonthFebruary = 2,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_MARCH")]
        MonthMarch = 3,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_APRIL")]
        MonthApril = 4,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_MAY")]
        MonthMay = 5,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_JUNE")]
        MonthJune = 6,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_JULY")]
        MonthJuly = 7,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_AUGUST")]
        MonthAugust = 8,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_SEPTEMBER")]
        MonthSeptember = 9,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_OCTOBER")]
        MonthOctober = 10,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_NOVEMBER")]
        MonthNovember = 11,
        [global::ProtoBuf.ProtoEnum(Name = @"MONTH_DECEMBER")]
        MonthDecember = 12,
    }

    [global::ProtoBuf.ProtoContract()]
    public enum OrdinalType
    {
        [global::ProtoBuf.ProtoEnum(Name = @"ORDINAL_UNKNOWN")]
        OrdinalUnknown = 0,
        [global::ProtoBuf.ProtoEnum(Name = @"ORDINAL_FIRST")]
        OrdinalFirst = 1,
        [global::ProtoBuf.ProtoEnum(Name = @"ORDINAL_SECOND")]
        OrdinalSecond = 2,
        [global::ProtoBuf.ProtoEnum(Name = @"ORDINAL_THIRD")]
        OrdinalThird = 3,
        [global::ProtoBuf.ProtoEnum(Name = @"ORDINAL_FOURTH")]
        OrdinalFourth = 4,
        [global::ProtoBuf.ProtoEnum(Name = @"ORDINAL_LAST")]
        OrdinalLast = 5,
    }

}

#pragma warning restore CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
