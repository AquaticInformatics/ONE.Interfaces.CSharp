// This file was generated by a tool; you should avoid making direct changes.
// Consider using 'partial classes' to extend these types
// Input: claros_common_form_formfield.proto

#pragma warning disable CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace Claros.Common.Form
{

    [global::ProtoBuf.ProtoContract()]
    public partial class FormField : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"guid")]
        [global::System.ComponentModel.DefaultValue("")]
        public string Guid { get; set; } = "";

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue("")]
        public string formFieldDefinitionId { get; set; } = "";

        [global::ProtoBuf.ProtoMember(3)]
        public FormDataEntryType formDataEntryType { get; set; }

        [global::ProtoBuf.ProtoMember(4)]
        public bool isDataEntryTypeLocked { get; set; }

        [global::ProtoBuf.ProtoMember(5, Name = @"name")]
        [global::System.ComponentModel.DefaultValue("")]
        public string Name { get; set; } = "";

        [global::ProtoBuf.ProtoMember(6, Name = @"cell")]
        public global::Claros.Operations.Spreadsheet.Cell Cell { get; set; }

        [global::ProtoBuf.ProtoMember(7, Name = @"instrumentData")]
        public global::System.Collections.Generic.List<global::Claros.Instrument.InstrumentData> instrumentDatas { get; } = new global::System.Collections.Generic.List<global::Claros.Instrument.InstrumentData>();

    }

}

#pragma warning restore CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
